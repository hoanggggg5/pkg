syntax = "proto3";
package GrpcEngine;

option go_package = "github.com/zsmartex/pkg/Grpc/engine;GrpcEngine";

import "proto/utils.proto";
import "proto/order.proto";
import "proto/symbol.proto";

message FetchOrderRequest {
  GrpcOrder.OrderKey order_key = 1;
}

message FetchOrderResponse {
  GrpcOrder.Order order = 1;
}

message FetchOpenOrdersRequest {
  GrpcSymbol.Symbol symbol = 1;
  string side = 2;
}

message BookOrder {
  repeated GrpcUtils.Decimal price_quantity = 1;
}

message FetchOrderBookRequest {
  GrpcSymbol.Symbol symbol = 1;
  int64 limit = 2;
}

message FetchOrderBookResponse {
  GrpcSymbol.Symbol symbol = 1;
  repeated BookOrder Bids = 2;
  repeated BookOrder Asks = 3;
  int64 sequence = 4;
}

message CalcMarketOrderRequest {
  GrpcSymbol.Symbol symbol = 1;
  string side = 2;
  GrpcUtils.Decimal quantity = 3;
  GrpcUtils.Decimal volume = 4;
}

message CalcMarketOrderResponse {
  GrpcUtils.Decimal quantity = 1;
  GrpcUtils.Decimal locked = 2;
}

message FetchMarketPriceRequest {
  GrpcSymbol.Symbol symbol = 1;
}

message FetchMarketPriceResponse {
  GrpcUtils.Decimal price = 1;
}

service MatchingEngineService {
  rpc FetchOrder(FetchOrderRequest) returns (FetchOrderResponse) {}
  rpc FetchOrderBook(FetchOrderBookRequest) returns (FetchOrderBookResponse) {}
  rpc CalcMarketOrder(CalcMarketOrderRequest) returns (CalcMarketOrderResponse) {}
  rpc FetchMarketPrice(FetchMarketPriceRequest) returns (FetchMarketPriceResponse) {}
}
